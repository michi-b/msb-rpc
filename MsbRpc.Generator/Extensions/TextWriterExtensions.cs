using System.IO;
using MsbRpc.Generator.Serialization;

namespace MsbRpc.Generator.Extensions;

public static class TextWriterExtensions
{
    public static void WriteFileHeader(this TextWriter writer, string fileScopedNamespace, params string[] usedNamespaces)
    {
        writer.WriteFileHeader();

        if (usedNamespaces.Length > 0)
        {
            foreach (string usedNamespace in usedNamespaces)
            {
                writer.WriteLine($"using {usedNamespace};");
            }

            writer.WriteLine();
        }

        writer.WriteFileScopedNamespace(fileScopedNamespace);
    }

    public static void WriteSemicolonLineBreak(this TextWriter writer) => writer.WriteLine(";");

    public static void FinalizeSerializationStatement(this TextWriter writer, ISerialization serialization)
    {
        if (serialization.NeedsSemicolonAfterSerializationStatement)
        {
            writer.WriteSemicolonLineBreak();
        }
        else
        {
            writer.WriteLine();
        }
    }

    private static void WriteFileHeader(this TextWriter writer)
    {
        writer.WriteGeneratedFileComment();
        writer.WriteEnableNullable();
        writer.WriteLine();
    }

    private static void WriteFileScopedNamespace(this TextWriter writer, string namespaceName)
    {
        writer.WriteLine($"namespace {namespaceName};");
        writer.WriteLine();
    }

    private static void WriteGeneratedFileComment(this TextWriter writer)
    {
        writer.WriteLine("// <auto-generated/>");
    }

    private static void WriteEnableNullable(this TextWriter writer)
    {
        writer.WriteLine("#nullable enable");
    }
}